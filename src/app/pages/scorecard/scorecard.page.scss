// Ionic adds a “can-go-back” class to the page which the
// ionic-back-button uses this to determine if it should
// be visible. Hide our custom back in that case
::ng-deep .can-go-back .custom-back {
  visibility: hidden;
  display: none;
}

.scorecard-container {
  display: flex;
  justify-content: space-between;
  max-width: 1500px;
  margin: auto;
  padding: 0 20px;

  .stats-container {
    width: calc(100% - 840px);

    .user-card {
      max-width: 100%;
      margin: 20px auto;

      .user-item {
        --ion-item-border-color: transparent;
      }
    }
  }

  .games-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 800px;
    max-width: 100%;

    h3 {
      width: 100%;
      text-align: left;
    }

    app-game-card {
      width: 100%;
    }
  }
}

// lock the stats container width for 20px to reduce the margin
@media (max-width: 1450px) {
  .scorecard-container .stats-container {
    width: 570px;
  }
}

// then shink with the display for a while
@media (max-width: 1430px) {
  .scorecard-container .stats-container {
    width: calc(100% - 820px);
  }
}

// lock the stats container at 380px and let the games container shrink for a while
@media (max-width: 1240px) {
  .scorecard-container {
    .stats-container {
      width: 380px;
    }

    .games-container {
      width: calc(100% - 400px);
    }
  }
}

// eventually switch to a column layout with a max width of 800px
@media (max-width: 1050px) {
  .scorecard-container {
    flex-direction: column;

    .stats-container,
    .games-container {
      margin: auto;
      width: 800px;
      max-width: 100%;
    }
  }
}

// on even smaller devices, let the cards expand to the width of the display
@media (max-width: 650px) {
  .scorecard-container {
    padding: 0;

    h3 {
      padding-left: 16px;
    }
  }
}